{"ast":null,"code":"import { getContinent, getCountry } from './Api';\nconst LOAD_CONTINENT = 'covid-19-data-tracker/details/LOAD_CONTINENT';\nconst LOAD_COUNTRY = 'covid-19-data-tracker/details/LOAD_COUNTRY';\nconst FILTER_DATA = 'covid-19-data-tracker/details/FILTER_DATA';\nconst initialState = [];\nexport const loadContinent = () => async dispatch => {\n  const continent = await getContinent();\n  const countries = Object.values(continent);\n\n  if (countries) {\n    dispatch({\n      type: LOAD_CONTINENT,\n      payload: countries\n    });\n  }\n};\nexport const loadCountry = name => async dispatch => {\n  const countryData = await getCountry(name);\n  const country = Object.values(countryData)[0];\n\n  if (country) {\n    dispatch({\n      type: LOAD_COUNTRY,\n      payload: country\n    });\n  }\n};\n\nconst filterNumbers = (countries, value) => {\n  switch (value) {\n    case '99999':\n      return countries.filter(country => country.All.confirmed < 100000);\n\n    case '100000':\n      return countries.filter(country => country.All.confirmed >= 100000 && country.All.confirmed < 200000);\n\n    case '200000':\n      return countries.filter(country => country.All.confirmed >= 200000 && country.All.confirmed < 300000);\n\n    case '300000':\n      return countries.filter(country => country.All.confirmed >= 300000);\n\n    default:\n      return countries;\n  }\n};\n\nexport const filterCountry = value => async dispatch => {\n  const continent = await getContinent();\n  const countries = Object.values(continent);\n  const filteredCountry = filterNumbers(countries, value);\n\n  if (filteredCountry) {\n    dispatch({\n      type: FILTER_DATA,\n      payload: filteredCountry\n    });\n  }\n};\n\nconst countriesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CONTINENT:\n      return {\n        continent: action.payload\n      };\n\n    case LOAD_COUNTRY:\n      return { ...state,\n        current_country: action.payload\n      };\n\n    case FILTER_DATA:\n      return {\n        continent: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default countriesReducer;","map":{"version":3,"sources":["C:/Users/HP HOUSE/covid19-react-capstone/src/redux/countries/countries.js"],"names":["getContinent","getCountry","LOAD_CONTINENT","LOAD_COUNTRY","FILTER_DATA","initialState","loadContinent","dispatch","continent","countries","Object","values","type","payload","loadCountry","name","countryData","country","filterNumbers","value","filter","All","confirmed","filterCountry","filteredCountry","countriesReducer","state","action","current_country"],"mappings":"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","sourcesContent":["import { getContinent, getCountry } from './Api';\n\nconst LOAD_CONTINENT = 'covid-19-data-tracker/details/LOAD_CONTINENT';\nconst LOAD_COUNTRY = 'covid-19-data-tracker/details/LOAD_COUNTRY';\nconst FILTER_DATA = 'covid-19-data-tracker/details/FILTER_DATA';\n\nconst initialState = [];\n\nexport const loadContinent = () => async (dispatch) => {\n  const continent = await getContinent();\n  const countries = Object.values(continent);\n\n  if (countries) {\n    dispatch({\n      type: LOAD_CONTINENT,\n      payload: countries,\n    });\n  }\n};\n\nexport const loadCountry = (name) => async (dispatch) => {\n  const countryData = await getCountry(name);\n  const country = Object.values(countryData)[0];\n\n  if (country) {\n    dispatch({\n      type: LOAD_COUNTRY,\n      payload: country,\n    });\n  }\n};\n\nconst filterNumbers = (countries, value) => {\n  switch (value) {\n    case '99999':\n      return countries.filter((country) => country.All.confirmed < 100000);\n    case '100000':\n      return countries.filter((country) => country.All.confirmed >= 100000\n        && country.All.confirmed < 200000);\n    case '200000':\n      return countries.filter((country) => country.All.confirmed >= 200000\n        && country.All.confirmed < 300000);\n    case '300000':\n      return countries.filter((country) => country.All.confirmed >= 300000);\n    default:\n      return countries;\n  }\n};\n\nexport const filterCountry = (value) => async (dispatch) => {\n  const continent = await getContinent();\n  const countries = Object.values(continent);\n  const filteredCountry = filterNumbers(countries, value);\n\n  if (filteredCountry) {\n    dispatch({\n      type: FILTER_DATA,\n      payload: filteredCountry,\n    });\n  }\n};\n\nconst countriesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CONTINENT:\n      return { continent: action.payload };\n    case LOAD_COUNTRY:\n      return {\n        ...state,\n        current_country: action.payload,\n      };\n    case FILTER_DATA:\n      return { continent: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default countriesReducer;\n"]},"metadata":{},"sourceType":"module"}